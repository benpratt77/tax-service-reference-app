{% extends "layout.html.twig" %}
{% block content %}
    <div>
        <h2>
            SampleTax overview
        </h2>
        <p>
            SampleTax is an example tax provider to demonstrate the usage of the
            <a href="https://developer.bigcommerce.com/api-reference/providers/tax-provider-api"
               target="_blank">BigCommerce Tax Provider API spec.</a>
        </p>
        <p>
            Its primary use was originally as a proof of concept for the Tax Provider
            API, however it has evolved with functionality to assist in testing
            changes/debugging errors within the domain.
        </p>
        <p>
            It also stands as an example of how integration with the BigCommerce Tax
            Provider API can be achieved.
        </p>
    </div>
    <div>
        <h2>
            SampleTax provides:
        </h2>
        <ul>
            <li>
                Quotation of tax rates given a tax quote request via API.
            </li>
            <li>
                The ability to elicit different results based on tax classes.
            </li>
        </ul>
    </div>
    <div>
        <h2>
            Supported operations:
        </h2>
        <p>
            SampleTax supports all endpoints required for integration
        </p>
        <p>
            `/estimate` for retrieving tax quotes.
        </p>
        <p>
            `/adjust` for adjusting a previous submitted tax document. At present
            this just simulates the action and returns an estimate based on the
            updated items in the tax quote request.
        </p>
        <p>
            `/commit` for tax document submission. At present this just simulates the
            action and returns an estimate.
        </p>
        <p>
            `/void` for deleting a previously submitted tax document. At present this
            will always return `{"success": true}`.
        </p>

        <p>
            Although it should be noted that SampleTax at present does not have
            storage and thus the commit, adjust and void operations are essentially
            mocked.
        </p>
    </div>
    <div>
        <h2>
            Features
        </h2>
        <p>
            SampleTax is able to mock certain behaviour that we might expect an
            external provider to exhibit.
        </p>
        <h3>
            Item based codes:
        </h3>
        <ul>
            <li>
                Applying the tax_code as `SPLITTAX` to the item will apply tax with
                its two sub components i.e. COUNTY TAX and STATE TAX.
            </li>
            <li>
                Applying the tax_code as `SPLITTAX1` to the item will apply tax with
                its three sub components i.e. COUNTY TAX, STATE TAX and BRUTAL TAX.
            </li>
            <li>
                Applying the tax_code as `yeah-nah` to the item will result in the
                item having zero tax applied to it.
            </li>
        </ul>
        <h3>
            Customer based codes:
        </h3>
        <ul>
            <li>
                Applying the taxability_code `TaxEvasion` to a customer will lead to
                zero tax to all products (Make the customer tax exempt).
            </li>
            <li>
                Applying the taxability_code `breakDatTax` to a customer will lead to
                SampleTax throwing an error. This is so we can simulate how OpenTax
                handles errors thrown by a provider.
            </li>
            <li>
                Applying the taxability_code `dozy` to a customer will lead to
                SampleTax simulating a slow response by delaying the response by 10
                seconds.
            </li>
            <li>
                Applying the taxability_code `yawn` to a customer will lead to
                SampleTax simulating a slow response by delaying the response by 20
                seconds.
            </li>
            <li>
                Applying the taxability_code `sleepyTimes` to a customer will lead to
                SampleTax simulating a slow response by delaying the response by 29
                seconds.
            </li>
            <li>
                Applying the taxability_code `502` to a customer will lead to
                SampleTax simulating a slow response by delaying the response by 45
                seconds.
            </li>
        </ul>
    </div>
{% endblock %}
